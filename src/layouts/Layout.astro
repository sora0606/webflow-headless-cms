---
import appleTouchIconImage from '../assets/apple-touch-icon.png';
import faviconImage from '../assets/favicon.svg';
import defaultOpenGraphImage from '../assets/opengraph-image.png';
import { siteLang, siteRegion, siteTitle, siteTwitterId } from '../consts';
import TheMenu from '@components/TheMenu.astro';

const items = [
  ['ホーム', '/'],
  ['About', '/about'],
  // [news.displayName, `/${news.slug}`],
  ['API連携', '/api/getstarted'],
];

interface BaseProps {
  isHome?: false | undefined;
  is404?: false | undefined;
  title: string;
  description?: string | undefined;
  ogType?: 'website' | 'article' | undefined;
  ogImage?: string | undefined;
}

// eslint-disable-next-line @typescript-eslint/no-empty-object-type
interface GeneralProps extends BaseProps {}

interface HomeProps extends Omit<BaseProps, 'isHome' | 'title'> {
  isHome: true;
  tagline: string;
}

interface NotFoundProps extends Omit<BaseProps, 'is404'> {
  is404: true;
}

type Props = GeneralProps | HomeProps | NotFoundProps;

const isHome = Astro.props.isHome === true;
const is404 = Astro.props.is404 === true;

const { description, ogType = 'website', ogImage = defaultOpenGraphImage.src } = Astro.props;

const resolvedOgImage = new URL(ogImage, Astro.site);

const canonicalURL = (() => {
  if (is404) {
    return null;
  }
  return new URL(Astro.url.pathname, Astro.site);
})();
---

<!--
  https://bugs.chromium.org/p/chromium/issues/detail?id=1378462
  https://schepp.dev/posts/smooth-scrolling-and-page-search/
-->
<html
  class="bg-white text-slate-800 kerning-none [line-break:normal] [overflow-wrap:anywhere] motion-safe:focus-within:scroll-smooth"
  lang={siteLang}
>
  <head>
    {
      /**
       * sort the order of elements in the `<head>` to improve performance
       * https://speakerdeck.com/csswizardry/get-your-head-straight?slide=39
       */
    }

    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />

    <title
      set:html={[!isHome && Astro.props.title, siteTitle, isHome && Astro.props.tagline]
        .filter(Boolean)
        .join(' &#8211; ')}
    />

    {description && <meta name="description" content={description} />}
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:site" content={`@${siteTwitterId}`} />
    <meta name="twitter:title" content={isHome ? siteTitle : Astro.props.title} />

    <meta property="og:title" content={isHome ? Astro.props.tagline : Astro.props.title} />
    <meta property="og:type" content={ogType} />
    <meta property="og:image" content={resolvedOgImage} />
    {canonicalURL && <meta property="og:url" content={canonicalURL} />}
    {description && <meta property="og:description" content={description} />}
    <meta property="og:site_name" content={siteTitle} />
    <meta property="og:locale" content={`${siteLang}_${siteRegion}`} />

    <link rel="apple-touch-icon" href={appleTouchIconImage.src} />
    {canonicalURL && <link rel="canonical" href={canonicalURL} />}
    <link rel="icon" href={faviconImage.src} type="image/svg+xml" />

    <script src="../scripts/main.ts"></script>
  </head>

  <body class="min-h-svh">
    {
      /**
       * use `100svh` instead of `100dvh`
       * https://piccalil.li/blog/a-more-modern-css-reset/#:~:text=I%20like%20a,to%20change%20it!
       */
    }

    <!-- <header class="fixed inset-x-0 top-0 z-40 border-b border-slate-300 bg-white text-sm font-bold">
      <div class="container mx-auto flex justify-between gap-x-6">
        <a class="py-3" href="/">{(sites as Site).displayName}</a>

        <div class="contents" x-data="{ open: false }">
          <button class="py-3" type="button" @click="open = true">Menu</button>

          <template x-teleport="#js-overlay-container">
            <TheMenu />
          </template>
        </div>
      </div>
    </header> -->

    <slot />

    {/* https://css-tricks.com/a-clever-sticky-footer-technique/ */}
    <footer class="sticky top-full mt-[fluid(3rem,5rem)] bg-slate-100 py-4 text-center text-sm">
      <nav>
        <ul class="flex justify-center">
          {
            items.map((item) => (
              <li>
                <a class="block p-3 text-xs" href={item[1]}>
                  {item[0]}
                </a>
              </li>
            ))
          }
        </ul>
      </nav>
      <p class="wrapper">&copy; <span x-data x-text="new Date().getFullYear()"></span> UNIEL</p>
    </footer>

    {/* https://atfzl.com/don-t-attach-tooltips-to-document-body */}
    <div id="js-overlay-container"></div>
  </body>
</html>
